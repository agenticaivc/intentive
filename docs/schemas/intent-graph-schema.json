{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://intentive.dev/schemas/intent-graph-v1.json",
  "title": "Intent Graph Schema",
  "description": "JSON Schema validation for Intentive Intent Graph YAML definitions. Note: `node.id`, `edge.id`, and `guard.name` MUST be unique across the entire graph (enforced by a future custom validator).",
  "type": "object",
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "additionalProperties": false,
  "properties": {
    "apiVersion": {
      "type": "string",
      "enum": ["intentive.dev/v1"],
      "description": "API version identifier"
    },
    "kind": {
      "type": "string",
      "enum": ["IntentGraph"],
      "description": "Resource type"
    },
    "metadata": {
      "$ref": "#/definitions/metadata"
    },
    "spec": {
      "$ref": "#/definitions/spec"
    }
  },
  "definitions": {
    "enums": {
      "nodeTypes": {
        "type": "string",
        "enum": ["action", "decision", "data"]
      },
      "edgeTypes": {
        "type": "string",
        "enum": ["sequence", "conditional"]
      },
      "guardTypes": {
        "type": "string",
        "enum": ["rbac", "rate_limit", "audit", "custom", "temporal"]
      },
      "parameterTypes": {
        "type": "string",
        "enum": ["string", "number", "boolean", "array", "object"]
      },
      "operators": {
        "type": "string",
        "enum": [
          "equals",
          "not_equals",
          "greater_than",
          "less_than",
          "in",
          "contains",
          "within_hours"
        ]
      },
      "logicOperators": {
        "type": "string",
        "enum": ["AND", "OR", "NOT"]
      },
      "priorities": {
        "type": "string",
        "enum": ["low", "medium", "high", "critical"]
      }
    },
    "metadata": {
      "type": "object",
      "required": ["name"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$",
          "maxLength": 63,
          "description": "Unique identifier for the intent graph"
        },
        "description": {
          "type": "string",
          "maxLength": 500,
          "description": "Human-readable description"
        },
        "version": {
          "type": "string",
          "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
          "description": "Semantic version"
        },
        "author": {
          "type": "string",
          "maxLength": 100,
          "description": "Creator identifier"
        },
        "created": {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
          "description": "Creation timestamp in ISO 8601 format"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 50
          },
          "maxItems": 20,
          "description": "Classification tags"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value labels for categorization"
        }
      }
    },
    "spec": {
      "type": "object",
      "required": ["nodes"],
      "additionalProperties": false,
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/node"
          },
          "minItems": 1,
          "maxItems": 100
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edge"
          },
          "maxItems": 500
        },
        "guards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guard"
          },
          "maxItems": 50
        },
        "config": {
          "$ref": "#/definitions/config"
        }
      }
    },
    "node": {
      "type": "object",
      "required": ["id", "type", "properties"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z0-9_]+$",
          "minLength": 1,
          "maxLength": 64,
          "description": "Unique node identifier"
        },
        "type": {
          "$ref": "#/definitions/enums/nodeTypes",
          "description": "Node type classification"
        },
        "properties": {
          "$ref": "#/definitions/nodeProperties"
        },
        "metadata": {
          "$ref": "#/definitions/nodeMetadata"
        }
      }
    },
    "nodeProperties": {
      "type": "object",
      "required": ["name", "handler"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 500
        },
        "handler": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*\\.[a-zA-Z][a-zA-Z0-9_]*$"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parameter"
          },
          "maxItems": 20
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          },
          "minItems": 1
        },
        "output": {
          "$ref": "#/definitions/outputSpec"
        },
        "timeout": {
          "type": "integer",
          "minimum": 1,
          "maximum": 3600,
          "description": "Node-specific timeout in seconds"
        },
        "retryCount": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "description": "Number of retries for this node"
        },
        "criticalPath": {
          "type": "boolean",
          "description": "Whether this node is on the critical path"
        },
        "requiresApproval": {
          "type": "boolean",
          "description": "Whether this node requires manual approval"
        },
        "parallel": {
          "type": "boolean",
          "description": "Whether this node can run in parallel"
        },
        "compliance": {
          "type": "boolean",
          "description": "Whether this node is compliance-related"
        },
        "financial": {
          "type": "boolean",
          "description": "Whether this node involves financial operations"
        },
        "priority": {
          "$ref": "#/definitions/enums/priorities",
          "description": "Priority level of this node"
        }
      }
    },
    "parameter": {
      "type": "object",
      "required": ["name", "type"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9_]*$"
        },
        "type": {
          "$ref": "#/definitions/enums/parameterTypes"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "pattern": {
          "type": "string"
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "items": {
          "$ref": "#/definitions/typeSpec"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeSpec"
          }
        },
        "default": {},
        "example": {}
      }
    },
    "typeSpec": {
      "type": "object",
      "required": ["type"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "$ref": "#/definitions/enums/parameterTypes"
        },
        "required": {
          "type": "boolean"
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "pattern": {
          "type": "string"
        },
        "default": {},
        "items": {
          "$ref": "#/definitions/typeSpec"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeSpec"
          }
        }
      }
    },
    "condition": {
      "type": "object",
      "required": ["field", "operator"],
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/enums/operators"
        },
        "value": {},
        "output": {
          "type": "string"
        }
      }
    },
    "outputSpec": {
      "type": "object",
      "required": ["type"],
      "additionalProperties": false,
      "if": {
        "properties": {
          "type": {
            "const": "array"
          }
        }
      },
      "then": {
        "required": ["items"]
      },
      "properties": {
        "type": {
          "$ref": "#/definitions/enums/parameterTypes"
        },
        "items": {
          "$ref": "#/definitions/typeSpec"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeSpec"
          }
        }
      }
    },
    "nodeMetadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "estimated_duration": {
          "type": "string",
          "pattern": "^[0-9]+[smh]$"
        },
        "priority": {
          "$ref": "#/definitions/enums/priorities"
        }
      }
    },
    "edge": {
      "type": "object",
      "required": ["id", "from", "to", "type"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z0-9_]+$"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/enums/edgeTypes"
        },
        "properties": {
          "$ref": "#/definitions/edgeProperties"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeCondition"
          }
        },
        "data_mapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dataMapping"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": false
        }
      }
    },
    "edgeProperties": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "edgeCondition": {
      "anyOf": [
        {
          "$ref": "#/definitions/condition"
        },
        {
          "type": "object",
          "required": ["logic", "rules"],
          "additionalProperties": false,
          "properties": {
            "logic": {
              "$ref": "#/definitions/enums/logicOperators"
            },
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/condition"
              },
              "minItems": 1
            }
          }
        }
      ]
    },
    "dataMapping": {
      "type": "object",
      "required": ["source", "target"],
      "additionalProperties": false,
      "properties": {
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "guard": {
      "type": "object",
      "required": ["name", "type", "apply_to"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z0-9_]+$"
        },
        "type": {
          "$ref": "#/definitions/enums/guardTypes"
        },
        "description": {
          "type": "string"
        },
        "apply_to": {
          "$ref": "#/definitions/guardApplyTo"
        },
        "config": {
          "anyOf": [
            {
              "$ref": "#/definitions/rbacGuardConfig"
            },
            {
              "$ref": "#/definitions/rateLimitGuardConfig"
            }
          ]
        },
        "metadata": {
          "type": "object",
          "additionalProperties": false
        }
      }
    },
    "guardApplyTo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^([a-z0-9_]+|[a-z0-9_]+->[a-z0-9_]+)$"
          }
        }
      }
    },
    "config": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "timeout": {
          "type": "integer",
          "minimum": 1,
          "maximum": 3600
        },
        "retry": {
          "$ref": "#/definitions/retryConfig"
        },
        "concurrency": {
          "$ref": "#/definitions/concurrencyConfig"
        }
      }
    },
    "retryConfig": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "maxAttempts": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        },
        "backoffMultiplier": {
          "type": "number",
          "minimum": 1,
          "maximum": 10
        }
      }
    },
    "concurrencyConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "maxParallel": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "rbacGuardConfig": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "requiredRoles"],
      "properties": {
        "type": { "const": "rbac" },
        "requiredRoles": {
          "type": "array",
          "items": { "type": "string" },
          "minItems": 1,
          "description": "List of roles required to pass this guard"
        },
        "requiredPermissions": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Optional list of permissions required"
        },
        "allowSuperuser": {
          "type": "boolean",
          "default": false,
          "description": "Whether superuser role bypasses all checks"
        }
      }
    },
    "rateLimitGuardConfig": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "maxRequests", "windowMs"],
      "properties": {
        "type": { "const": "rate_limit" },
        "maxRequests": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000,
          "description": "Maximum number of requests allowed in the window"
        },
        "windowMs": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 86400000,
          "description": "Time window in milliseconds (1s to 24h)"
        },
        "keyGenerator": {
          "type": "string",
          "enum": ["user", "ip", "custom"],
          "default": "user",
          "description": "How to generate rate limit keys"
        }
      }
    }
  }
}
